% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BayesSurv.R
\docType{package}
\name{BayesSurv}
\alias{BayesSurv}
\alias{BayesSurv-package}
\title{Fit the Bayesian Cox Model}
\usage{
BayesSurv(
  Data,
  model.type = "Pooled",
  MRF2b = FALSE,
  MRF.G = TRUE,
  g.ini = 0,
  priorPara = NULL,
  initial = NULL,
  nIter = 1,
  burnin = 0,
  thin = 1,
  seed = 123,
  output_graph_para = FALSE
)
}
\arguments{
\item{Data}{a list containing observed data from \code{n} subjects;
\code{t}, \code{di}, \code{X}. See details for more information}

\item{model.type}{a method option from 
\code{c("Pooled", "CoxBVSSL", "Sub-struct")}}

\item{MRF2b}{logical value. \code{MRF2b = TRUE} means two different 
hyperparameters b in MRF prior (values b01 and b02) and \code{MRF2b = FALSE} 
means one hyperparamter b in MRF prior}

\item{MRF.G}{logical value. \code{MRF.G = TRUE} is to fix the MRF graph which 
is provided in the argument \code{priorPara}, and \code{MRF.G = FALSE} is to 
use graphical model for leanring the MRF graph}

\item{g.ini}{initial values for latent edge inclusion indicators in graph, 
should be a value in [0,1]. 0 or 1: set all random edges to 0 or 1; value in 
(0,1): rate of indicators randomly set to 1, the remaining indicators are 0}

\item{priorPara}{a list containing prior parameter values}

\item{initial}{a list containing prior parameters' initial values}

\item{nIter}{the number of iterations of the chain}

\item{burnin}{number of iterations to discard at the start of the chain.
Default is 0}

\item{thin}{thinning MCMC intermediate results to be stored}

\item{seed}{random seed}

\item{output_graph_para}{allow (\code{TRUE}) or suppress (\code{FALSE}) the 
output for parameters 'G', 'V', 'C' and 'Sig' in the graphical model 
if \code{MRF.G = FALSE}}
}
\value{
An object of class \code{BayesSurv} is saved as
\code{obj_BayesSurv.rda} in the output file, including the following components:
\itemize{
\item input - a list of all input parameters by the user
\item output - a list of the all output estimates:
\itemize{
\item "\code{gamma.p}" - a matrix with MCMC intermediate estimates of the indicator variables of regression coefficients.
\item "\code{beta.p}" - a matrix with MCMC intermediate estimates of the regression coefficients.
\item "\code{h.p}" - a matrix with MCMC intermediate estimates of the increments in the cumulative baseline hazard in each interval.
}
\item call - the matched call.
}
}
\description{
This is the main function to fit a Bayesian Cox model with graph-structured 
selection priors for sparse identification of high-dimensional covariates.
}
\details{
BayesSurv
}
\examples{

library("survival")
library("GGally")
library("BayesSurv")

# Load the example dataset
data("simData", package = "BayesSurv")

dataset = list("X" = simData[[1]]$X, 
               "t" = simData[[1]]$time,
               "di" = simData[[1]]$status)

# Initial value: null model without covariates
log.like  = coxph( Surv(dataset$t, dataset$di, type = c('right')) ~ 1 )$loglik 
initial = list("gamma.ini" = rep(0, ncol(dataset$X)), 
               "beta.ini" = rep(0, ncol(dataset$X)), 
               "log.like.ini" = log.like)
# Prior parameters
priorParaPooled = list(
  #"eta0"   = eta0,                   # prior of baseline hazard
  #"kappa0" = kappa0,                 # prior of baseline hazard
  "c0"     = 2,                      # prior of baseline hazard
  "tau"    = 0.0375,                 # sd for coefficient prior
  "cb"     = 20,                     # sd for coefficient prior
  "pi.ga"  = 0.02, #0.5, ga.pi,      # prior variable selection probability for standard Cox models
  "nu0"    = 0.05,                   # hyperparameter in graphical model
  "nu1"    = 5,                      # hyperparameter in graphical model
  "lambda" = 3,                      # hyperparameter in graphical model
  "a"      = -4, #a0,                # hyperparameter in MRF prior
  "b"      = 0.1, #b0,               # hyperparameter in MRF prior
  "G"      = simData$G               # hyperparameter in MRF prior
)    

\donttest{
# run Bayesian Cox with graph-structured priors
fit = BayesSurv(Data=dataset, priorPara=priorParaPooled, 
                initial=initial, nIter=100, seed=123)

# show posterior mean of coefficients and 95\% credible intervals
plot(fit) + 
  coord_flip() + 
    theme(axis.text.x = element_text(angle = 90, size = 7))
}

}
